# Task ID: 4
# Title: Add Team Assignment Field to Task Model with Database Migration
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Modify the existing Task model to include a team assignment field, create and apply database migration, and implement comprehensive unit tests.
# Details:
This task involves modifying the existing Task model in `apps.tasks.models.py` to support team assignments:

1. **Model Modification**:
   - Add import statement: `from apps.teams.models import Team`
   - Add new field to Task model: `assigned_team = models.ForeignKey('teams.Team', on_delete=models.SET_NULL, null=True, blank=True, related_name='tasks')`
   - Ensure the field allows null values to support tasks not assigned to any team
   - Use SET_NULL on delete to preserve task data when teams are deleted

2. **Database Migration**:
   - Generate migration: `python manage.py makemigrations tasks`
   - Review the generated migration file to ensure correctness
   - Apply migration: `python manage.py migrate`
   - Verify migration was applied successfully

3. **Model Considerations**:
   - The ForeignKey uses string reference 'teams.Team' to avoid circular import issues
   - SET_NULL ensures data integrity when teams are deleted
   - related_name='tasks' allows reverse lookup from Team to associated tasks
   - null=True, blank=True makes the field optional

4. **Code Quality**:
   - Ensure proper import organization
   - Add appropriate model documentation/comments
   - Verify no circular import issues

# Test Strategy:
Implement comprehensive unit tests to verify the team assignment functionality:

1. **Model Field Tests**:
   - Test creating a task without team assignment (should work with null value)
   - Test creating a task with valid team assignment
   - Test that assigned_team field accepts null values
   - Test that assigned_team field accepts valid Team instances

2. **Foreign Key Relationship Tests**:
   - Test reverse relationship: verify team.tasks.all() returns associated tasks
   - Test CASCADE behavior: when team is deleted, task.assigned_team becomes null
   - Test multiple tasks can be assigned to the same team

3. **Migration Tests**:
   - Verify migration runs without errors
   - Test that existing tasks remain intact after migration
   - Verify new field is properly added to database schema

4. **Integration Tests**:
   - Test task creation via API with team assignment
   - Test task update to change team assignment
   - Test filtering tasks by assigned team

5. **Edge Case Tests**:
   - Test assigning non-existent team (should raise error)
   - Test removing team assignment (setting to null)
   - Test database constraints are properly enforced
