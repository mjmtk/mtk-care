# Generated by Django 5.2 on 2025-05-19 07:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assessment_forms', '0001_initial'),
        ('client_management', '0002_initial'),
        ('core', '0002_initial'),
        ('cultural_groups', '0001_initial'),
        ('optionlists', '0001_initial'),
        ('referral_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceAssessmentForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=32)),
                ('is_required', models.BooleanField(default=False)),
                ('assessment_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment_forms.assessmentform')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceAssignedStaff',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Synced At')),
                ('role', models.CharField(max_length=64)),
                ('fte', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('is_responsible', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted By')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCulturalGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cultural_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cultural_groups.culturalgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProgram',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Synced At')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('inactive', 'Inactive'), ('operational', 'Operational'), ('archived', 'Archived')], db_index=True, default='draft', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('enrolment_schema', models.JSONField(blank=True, null=True)),
                ('extra_data', models.JSONField(blank=True, null=True)),
                ('assessment_forms', models.ManyToManyField(through='service_management.ServiceAssessmentForm', to='assessment_forms.assessmentform')),
                ('assigned_staff', models.ManyToManyField(through='service_management.ServiceAssignedStaff', through_fields=('service_program', 'staff'), to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('cultural_groups', models.ManyToManyField(through='service_management.ServiceCulturalGroup', to='cultural_groups.culturalgroup')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted By')),
                ('delivery_modes', models.ManyToManyField(limit_choices_to={'option_list__slug': 'service_management-delivery_modes'}, related_name='service_program_delivery_modes', to='optionlists.optionlistitem')),
                ('locations', models.ManyToManyField(limit_choices_to={'option_list__slug': 'service_management-locations'}, related_name='service_program_locations', to='optionlists.optionlistitem')),
                ('service_types', models.ManyToManyField(limit_choices_to={'option_list__slug': 'service_management-service_types'}, related_name='service_program_types', to='optionlists.optionlistitem')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='serviceculturalgroup',
            name='service_program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_management.serviceprogram'),
        ),
        migrations.AddField(
            model_name='serviceassignedstaff',
            name='service_program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='service_management.serviceprogram'),
        ),
        migrations.AddField(
            model_name='serviceassessmentform',
            name='service_program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_management.serviceprogram'),
        ),
        migrations.CreateModel(
            name='Enrolment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Synced At')),
                ('enrolment_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('exit_notes', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('episode_number', models.CharField(blank=True, max_length=32)),
                ('extra_data', models.JSONField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client_management.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted By')),
                ('documents', models.ManyToManyField(blank=True, to='core.document')),
                ('exit_reason', models.ForeignKey(blank=True, limit_choices_to={'option_list__slug': 'service_management-exit-reasons'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrolment_exit_reasons', to='optionlists.optionlistitem')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='referral_management.referral')),
                ('responsible_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_management_enrolment_responsible_staff', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(limit_choices_to={'option_list__slug': 'enrolment-status'}, on_delete=django.db.models.deletion.PROTECT, related_name='enrolment_statuses', to='optionlists.optionlistitem')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('service_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_management.serviceprogram')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProgramFunding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('funding_agency', models.ForeignKey(limit_choices_to={'option_list__slug': 'service_management-funding_agencies'}, on_delete=django.db.models.deletion.CASCADE, related_name='funded_service_programs', to='optionlists.optionlistitem')),
                ('service_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funding_links', to='service_management.serviceprogram')),
            ],
        ),
        migrations.AddField(
            model_name='serviceprogram',
            name='funding_agencies',
            field=models.ManyToManyField(limit_choices_to={'option_list__slug': 'service_management-funding_agencies'}, related_name='service_program_funding_agencies', through='service_management.ServiceProgramFunding', to='optionlists.optionlistitem'),
        ),
        migrations.CreateModel(
            name='ServiceRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.ForeignKey(limit_choices_to={'option_list__slug': 'service_management-regions'}, on_delete=django.db.models.deletion.CASCADE, related_name='service_program_regions_link', to='optionlists.optionlistitem')),
                ('service_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_links', to='service_management.serviceprogram')),
            ],
        ),
    ]
