name: Build and deploy Node.js app to Azure Web App - mtk-care

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: npm install and build
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
          
          # Verify standalone build was created
          if [ ! -f ".next/standalone/server.js" ]; then
            echo "❌ ERROR: Standalone build failed - server.js not found"
            exit 1
          fi
          
          echo "✅ Standalone build successful"
          ls -la .next/standalone/

      - name: Create standalone deployment package
        working-directory: ./frontend
        run: |
          # Detailed debugging of build output
          echo "=== DEBUGGING BUILD OUTPUT ==="
          echo "Contents of .next/:"
          ls -la .next/
          echo ""
          echo "Contents of .next/standalone/:"
          ls -la .next/standalone/ || echo "❌ No standalone directory"
          echo ""
          echo "Contents of .next/static/:"
          ls -la .next/static/ || echo "❌ No static directory"
          echo ""
          
          # Check if standalone was actually created
          if [ ! -d ".next/standalone" ]; then
            echo "❌ ERROR: Standalone build not created!"
            echo "Current next.config.js content:"
            cat next.config.js || echo "No next.config.js found"
            echo "Attempting to find any .next directories:"
            find . -name ".next" -type d
            exit 1
          fi
          
          # Create deployment directory
          mkdir -p deploy-standalone
          
          # Copy standalone files with verbose output
          echo "=== COPYING STANDALONE FILES ==="
          cp -rv .next/standalone/* deploy-standalone/
          
          # Copy static files to correct location
          echo "=== COPYING STATIC FILES ==="
          mkdir -p deploy-standalone/.next
          cp -rv .next/static deploy-standalone/.next/static
          
          # Copy public directory
          echo "=== COPYING PUBLIC FILES ==="
          cp -rv public deploy-standalone/public
          
          # Create package.json for standalone
          cat > deploy-standalone/package.json << 'EOF'
          {
            "name": "mtk-care-standalone",
            "version": "1.0.0",
            "scripts": {
              "start": "node server.js"
            },
            "engines": {
              "node": ">=18.0.0"
            }
          }
          EOF
          
          # COMPREHENSIVE verification
          echo "=== FINAL PACKAGE VERIFICATION ==="
          echo "Top level files:"
          ls -la deploy-standalone/
          echo ""
          echo "Check for server.js:"
          ls -la deploy-standalone/server.js || echo "❌ server.js MISSING!"
          echo ""
          echo "Check for .next directory:"
          ls -la deploy-standalone/.next/ || echo "❌ .next directory MISSING!"
          echo ""
          echo "Check for static files:"
          ls -la deploy-standalone/.next/static/ || echo "❌ static directory MISSING!"
          echo ""
          echo "Check for public files:"
          ls -la deploy-standalone/public/ || echo "❌ public directory MISSING!"
          echo ""
          
          # Create zip with verbose output
          echo "=== CREATING ZIP ==="
          cd deploy-standalone 
          ls -la
          zip -r ../../release.zip .
          cd ..
          echo "Zip file size:"
          ls -lh ../release.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          if-no-files-found: error
          include-hidden-files: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          echo "=== POST-UNZIP VERIFICATION ==="
          echo "Current directory contents:"
          ls -la
          echo ""
          echo "Looking for server.js:"
          find . -name "server.js" -type f || echo "❌ server.js not found anywhere!"
          echo ""
          echo "Looking for .next directories:"
          find . -name ".next" -type d || echo "❌ No .next directories found!"
          echo ""
          echo "All files in current directory:"
          find . -type f | head -20
          echo ""
          echo "Directory tree (first 3 levels):"
          find . -maxdepth 3 -type d | sort
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_27D3DBA1F4BF4F61A1DA99ED2DC5434D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9A08E8C1E9ED47899233F66B1E46B50D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_16072FAAEABC4E46B8B9B8DB740F3639 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'mtk-care'
          slot-name: 'Production'
          package: .