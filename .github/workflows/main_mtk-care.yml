name: Build and deploy Node.js app to Azure Web App - mtk-care

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: npm install and build
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
          
          # Verify build output
          echo "=== Build Output Verification ==="
          ls -la .next/
          ls -la .next/server/ || echo "No server directory found"
          ls -la .next/standalone/ || echo "No standalone directory found"
          
          # Check if standalone server.js exists
          if [ -f ".next/standalone/server.js" ]; then
            echo "✅ Standalone server.js found"
          else
            echo "❌ Standalone server.js NOT found"
          fi

      - name: Create deployment package
        working-directory: ./frontend
        run: |
          # Check if standalone build exists
          if [ -f ".next/standalone/server.js" ]; then
            echo "=== Using Standalone Build ==="
            mkdir -p deploy-package
            
            # Copy standalone files (this is the key!)
            cp -r .next/standalone/* deploy-package/
            
            # Copy static files to the correct location
            mkdir -p deploy-package/.next
            cp -r .next/static deploy-package/.next/static
            
            # Copy public directory
            cp -r public deploy-package/public
            
            echo "✅ Standalone deployment package created"
            
          else
            echo "=== Using Regular Build ==="
            mkdir -p deploy-package
            
            # Copy essential files for Next.js
            cp -r .next deploy-package/
            cp -r node_modules deploy-package/
            cp -r public deploy-package/
            cp package.json deploy-package/
            cp package-lock.json deploy-package/
            
            # Copy next.config.js if it exists
            if [ -f next.config.js ]; then
              cp next.config.js deploy-package/
            fi
            
            # Copy next.config.mjs if it exists
            if [ -f next.config.mjs ]; then
              cp next.config.mjs deploy-package/
            fi
            
            echo "✅ Regular deployment package created"
          fi
          
          # List contents to verify
          echo "=== Deployment Package Contents ==="
          ls -la deploy-package/
          
          # Check for server.js in the package
          if [ -f "deploy-package/server.js" ]; then
            echo "✅ server.js found in deployment package"
          else
            echo "❌ server.js NOT found in deployment package"
          fi
          
          # Create zip from the deploy-package directory
          cd deploy-package && zip -r ../../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          echo "Unzipped contents:"
          ls -la
          echo "Next.js build verification:"
          ls -la .next/ || echo "No .next directory found"
          ls -la .next/server/ || echo "No server directory found"
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_27D3DBA1F4BF4F61A1DA99ED2DC5434D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9A08E8C1E9ED47899233F66B1E46B50D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_16072FAAEABC4E46B8B9B8DB740F3639 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'mtk-care'
          slot-name: 'Production'
          package: .