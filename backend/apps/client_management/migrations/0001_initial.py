# Generated by Django 5.0.14 on 2025-06-07 18:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("optionlists", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Is Deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "last_synced_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Synced At"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="Client's first name or given name",
                        max_length=100,
                        verbose_name="First Name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Client's last name or family name",
                        max_length=100,
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "preferred_name",
                    models.CharField(
                        blank=True,
                        help_text="Name the client prefers to be called",
                        max_length=100,
                        null=True,
                        verbose_name="Preferred Name",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        help_text="Client's date of birth", verbose_name="Date of Birth"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Primary email address",
                        max_length=254,
                        null=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Primary phone number",
                        max_length=50,
                        null=True,
                        verbose_name="Phone",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Full address including street, city, and postcode",
                        null=True,
                        verbose_name="Address",
                    ),
                ),
                (
                    "interpreter_needed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether an interpreter is required for communication",
                        verbose_name="Interpreter Needed",
                    ),
                ),
                (
                    "cultural_identity",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Cultural background information (extensible JSON field)",
                        verbose_name="Cultural Identity",
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="low",
                        help_text="Assessment of client risk level",
                        max_length=20,
                        verbose_name="Risk Level",
                    ),
                ),
                (
                    "consent_required",
                    models.BooleanField(
                        default=True,
                        help_text="Whether explicit consent is required for service provision",
                        verbose_name="Consent Required",
                    ),
                ),
                (
                    "incomplete_documentation",
                    models.BooleanField(
                        default=False,
                        help_text="Flag indicating missing required documentation",
                        verbose_name="Incomplete Documentation",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the client",
                        null=True,
                        verbose_name="Notes",
                    ),
                ),
                (
                    "extended_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional data fields for future extensions",
                        verbose_name="Extended Data",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by_audit",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted By",
                    ),
                ),
                (
                    "primary_language",
                    models.ForeignKey(
                        blank=True,
                        help_text="Client's preferred language",
                        limit_choices_to={"option_list__slug": "languages"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="primary_language_clients",
                        to="optionlists.optionlistitem",
                        verbose_name="Primary Language",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        help_text="Current client status",
                        limit_choices_to={"option_list__slug": "client-statuses"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="client_status_clients",
                        to="optionlists.optionlistitem",
                        verbose_name="Status",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by_audit",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "ordering": ["last_name", "first_name"],
                "indexes": [
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="client_mana_last_na_077587_idx",
                    ),
                    models.Index(
                        fields=["status"], name="client_mana_status__4ee4c9_idx"
                    ),
                    models.Index(
                        fields=["date_of_birth"], name="client_mana_date_of_d4cadb_idx"
                    ),
                    models.Index(
                        fields=["primary_language"],
                        name="client_mana_primary_b0f7b1_idx",
                    ),
                    models.Index(
                        fields=["risk_level"], name="client_mana_risk_le_bc30a7_idx"
                    ),
                ],
            },
        ),
    ]
